/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 /*           58 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────────────┬────────────────────────────╮
  │  0   1   2   3   4   5     │      6   7   8   9  10  11 │
  │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │
  │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │
  │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │
  ╰───────────╮ 50  51  52  53 │ 54  55  56  57 ╭───────────╯
              ╰────────────────┴────────────────╯            */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define M_BASE 1
#define LOWER 2
#define M_LOWER 3
#define RAISE 4
#define M_RAISE 5
#define ADJUST 6
#define M_ADJUST 7
#define GAME 8
#define GAME_LOWER 9

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    flavor = "hold-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_gui {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LGUI>;
            layers = <BASE>;
        };
        combo_gui_left {
            timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&sk LGUI>;
            layers = <BASE>;
        };
        combo_gui_right {
            timeout-ms = <50>;
            key-positions = <19 31>;
            bindings = <&sk LGUI>;
            layers = <BASE>;
        };
        combo_ctrl {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LCTRL>;
            layers = <M_BASE>;
        };
        combo_ctrl_left {
            timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&sk LCTRL>;
            layers = <M_BASE>;
        };
        combo_ctrl_right {
            timeout-ms = <50>;
            key-positions = <19 31>;
            bindings = <&sk LCTRL>;
            layers = <M_BASE>;
        };
    };

    behaviors {
        lp: long_press {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1>;
        };
        custom_p: custom_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N8)>, <&kp LS(N9)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_gt: custom_gt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NUBS>, <&kp LS(NUBS)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_gt_m: custom_gt_m {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp LS(GRAVE)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_bk: custom_bracket {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RA(LBKT)>, <&kp RA(RBKT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_b: custom_brace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RA(SQT)>, <&kp RA(NUHS)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_q: custom_question {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(MINUS)>, <&kp PLUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_e: custom_exclamation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N1)>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_s: custom_slash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N7)>, <&kp RA(GRAVE)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        custom_s_m: custom_slash_mac {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N7)>, <&kp RA(NON_US_BSLH)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        swap_w: tri-state-window {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <27>;
        };
        swap_t: tri-state-tab {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
            ignored-key-positions = <39>;
        };
        swap_t_p: tri-state-window-prev {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(TAB))>, <&kp LS(TAB)>;
            mods = <MOD_LCTL>;
            keep-mods = <MOD_LCTL>;
        };
    };

   // Activate ADJUST layers by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
        adjust_layer_m {
            if-layers = <M_LOWER M_RAISE>;
            then-layer = <M_ADJUST>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |   I   |  O   |   P   |       |
// |       |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |   K   |  L   |  Ñ   |       |
// |       |Z/SHIFT|X/ALT| C  |  V   |  B   |        |  |       |  N   |  M    |   ,   |  .   |-/SHIFT|      |
//               |     |    | CTRL/ESC | LOWER/TAB|  SPACE |  | ENTER | RAISE/BKSPC| DEL  |       |       |
            bindings = <
&none   &none  &none    &none    &none     &none                            &none  &none     &none     &none    &none   &none
&none   &kp Q &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &none
&none   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L   &lp SEMI SQT  &none
&none   &mt LSHIFT Z  &mt LALT X    &kp C    &kp V  &kp B   &none &none    &kp N  &kp M     &kp COMMA &kp DOT  &mt RSHFT FSLH &none
                     &none   &none &mt LCTRL ESC &lt LOWER TAB &kp SPACE    &kp RET  &lt RAISE BSPC &kp DEL &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_PREV C_NEXT>;
        };
        default_layer_m {
            display-name = "m_default";
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |   I   |  O   |   P   |       |
// |       |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |   K   |  L   |  Ñ   |       |
// |       |Z/SHIFT|X/ALT| C  |  V   |  B   |        |  |       |  N   |  M    |   ,   |  .   |-/SHIFT|      |
//               |     |    | CTRL/ESC | LOWER/TAB|  SPACE |  | ENTER | RAISE/BKSPC| DEL  |       |       |
            bindings = <
&none   &none  &none    &none    &none     &none                            &none  &none     &none     &none    &none   &none
&none   &kp Q &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &none
&none   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L   &lp SEMI SQT  &none
&none   &mt LSHIFT Z  &mt LALT X    &kp C    &kp V  &kp B   &none &none    &kp N  &kp M     &kp COMMA &kp DOT  &mt RSHFT FSLH &none
                     &none   &none &mt LGUI ESC &lt M_LOWER TAB &kp SPACE    &kp RET  &lt M_RAISE BSPC &kp DEL &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_PREV C_NEXT>;
        };

        lower_layer {
            display-name = "lower";
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |VOLU | MUTE|PRV_WPC|NXT_WPC|GAME|                   |  &   |  /    |  (    |  )   |   =   |       |
// |       | VOLD | PLAY | prev_w | swap_w |  '   |                   |  !   |  <    |  {    |  [   |   ?   |       |
// |       | SHIFT| CAPS | prev_t | swap_t |  `   |        |  |       |  +   |  "    |  ;    |  :   |   _   |       |
//               |     |      |      |      |        |  |       |     | WORD_DEL |       |      |
// ------------------------------------------------------------------------------------------------------------

            bindings = <
&trans    &trans   &trans   &trans   &trans   &trans                                &trans   &trans   &trans    &trans   &trans   &trans  
&trans    &kp C_VOL_UP &kp C_MUTE &kp LC(LG(LEFT)) &kp LC(LG(RIGHT)) &tog GAME         &kp LS(N6) &custom_s      &custom_p &kp LS(N9)  &kp LS(N0) &trans
&trans    &kp C_VOL_DN &kp C_PP &kp LS(TAB) &swap_w  &kp MINUS                    &custom_e &custom_gt  &custom_b &custom_bk &custom_q &trans
&trans    &kp LSHFT &kp CAPS &swap_t_p &swap_t  &kp LBKT    &trans &trans &kp RBKT &kp LS(N2) &kp LS(COMMA) &kp LS(DOT) &kp LS(FSLH) &trans
                    &trans    &trans   &trans    &trans  &trans &trans  &lt RAISE LC(BSPC)  &kp LC(DEL)   &trans    &trans
            >;
        };
        lower_layer_m {
            display-name = "m_lower";
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |VOLU | MUTE|PRV_WPC|NXT_WPC|GAME|                   |  &   |  /    |  (    |  )   |   =   |       |
// |       | VOLD | PLAY | prev_w | swap_w |  '   |                   |  !   |  <    |  {    |  [   |   ?   |       |
// |       | SHIFT| CAPS | prev_t | swap_t |  `   |        |  |       |  +   |  "    |  ;    |  :   |   _   |       |
//               |     |      |      |      |        |  |       |     | WORD_DEL |       |      |
// ------------------------------------------------------------------------------------------------------------

            bindings = <
&trans    &trans   &trans   &trans   &trans   &trans                                &trans   &trans   &trans    &trans   &trans   &trans  
&trans    &kp C_VOL_UP &kp C_MUTE &kp LC(LG(LEFT)) &kp LC(LG(RIGHT)) &tog GAME         &kp LS(N6) &custom_s_m &custom_p &kp LS(N9)  &kp LS(N0) &trans
&trans    &kp C_VOL_DN &kp C_PP &kp LS(TAB) &swap_w  &kp MINUS                    &custom_e  &custom_gt_m &custom_b &custom_bk  &custom_q &trans
&trans    &kp LSHFT &kp CAPS  &swap_t_p &swap_t  &kp LBKT    &trans &trans &kp RBKT &kp LS(N2) &kp LS(COMMA) &kp LS(DOT) &kp LS(FSLH) &trans
                    &trans    &trans   &trans    &trans  &trans &trans  &lt M_RAISE LA(BSPC)  &kp LA(DEL)   &trans    &trans
            >;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// |       |      |      |       |       |      |                 |      |      |       |      |       |       |
// |       |   |  |   @  |   #   |   $   |   %  |                 |      |PRVWD |       |NXTWD |       |       |
// |       |      |      |       |       |      |                 |  <-  |   v  |   ^   |  ->  |       |       |
// |       |      |      |       |       |      |      |  |      |      | HOME |       | END  |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&trans     &trans       &trans       &trans      &trans       &trans                      &trans    &trans    &trans   &trans     &trans  &trans
&trans     &kp RA(N1)   &kp RA(N2)   &kp RA(N3)  &kp LS(N4)   &kp LS(N5)                  &trans &kp LC(LEFT) &trans   &kp LC(RIGHT) &trans  &trans
&trans     &trans       &trans       &trans      &trans       &trans                      &kp LEFT   &kp DOWN   &kp UP &kp RIGHT   &trans &trans
&trans     &trans       &trans       &trans      &trans       &trans        &trans  &trans &trans    &kp HOME  &trans   &kp END    &trans  &trans
                        &trans       &trans      &trans       &trans        &trans  &trans  &trans    &trans    &trans   &trans
            >;
        };
        raise_layer_m {
            display-name = "m_raise";
// ------------------------------------------------------------------------------------------------------------
// |       |      |      |       |       |      |                 |      |      |       |      |       |       |
// |       |   |  |   @  |   #   |   $   |   %  |                |       | PRVWD |       |NXTWD |       |       |
// |       |      |      |       |       |      |                |  <-  |  v   |   ^   |  ->  |       |       |
// |       |      |      |       |       |      |      |  |      |      | HOME |       | END  |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&trans     &trans       &trans       &trans      &trans       &trans                      &trans    &trans    &trans   &trans     &trans  &trans
&trans     &kp RA(N1)   &kp RA(N2)   &kp RA(N3)  &kp LS(N4)   &kp LS(N5)                  &trans &kp LA(LEFT) &trans   &kp LA(RIGHT) &trans  &trans
&trans     &trans       &trans       &trans      &trans       &trans                      &kp LEFT   &kp DOWN  &kp UP &kp RIGHT   &trans &trans
&trans     &trans       &trans       &trans      &trans       &trans        &trans  &trans &trans &kp RG(LEFT) &trans   &kp RG(RIGHT)    &trans  &trans
                        &trans       &trans      &trans       &trans        &trans  &trans  &trans    &trans    &trans   &trans
            >;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// |        |         |         |         |         |         |                  |      |      |       |      |       |       |
// |        |         |  WIN    |    €    |         |         |                  |      |   7  |   8   |  9   |   0   |       |
// |        |         |  MAC    |         |  EXTPWR |  BTCLR  |                  |      |   4  |   5   |  6   |   ~   |       |
// |        |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |         | |      |      |   1  |   2   |  3   |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust";
            bindings = <
&none  &none         &none         &none         &none         &none                          &none &none &none &none &none &none
&none  &none         &to BASE   &kp RA(E)   &none   &none                                       &none &kp N7 &kp N8 &kp N9 &kp N0 &none
&none  &none         &to M_BASE  &none  &ext_power EP_TOG  &bt BT_CLR                            &none &kp N4 &kp N5 &kp N6 &kp RA(N4) &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &none &none  &none  &kp N1 &kp N2 &kp N3 &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };
        adjust_layer_m {
// ----------------------------------------------------------------------------------------------------------------------------
// |        |         |         |         |         |         |                  |      |      |       |      |       |       |
// |        |         |  WIN    |    €    |         |         |                  |      |   7  |   8   |  9   |   0   |       |
// |        |         |  MAC    |         |  EXTPWR |  BTCLR  |                  |      |   4  |   5   |  6   |   ~   |       |
// |        |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |         | |      |      |   1  |   2   |  3   |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust_m";
            bindings = <
&none  &none         &none         &none         &none         &none                          &none &none &none &none &none &none
&none  &none         &to BASE      &kp RA(E)   &none        &none                             &none &kp N7 &kp N8 &kp N9 &kp N0 &none
&none  &none         &to M_BASE  &none   &ext_power EP_TOG     &bt BT_CLR                      &none &kp N4 &kp N5 &kp N6 &kp RA(SEMI) &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &none &none  &none  &kp N1 &kp N2 &kp N3 &none &none
                                  &none   &none  &none  &none  &none           &none  &none &none &none &none
            >;
        };
        game_layer {
            display-name = "game";
// ------------------------------------------------------------------------------------------------------------
// |  ESC   |   1   |   2   |   3   |   4   |   5   |                  |   6   |   7   |   8   |   9   |   0   |       |
// |  TAB   |   Q   |   W   |   E   |   R   |   T   |                  |   Y   |   U   |   I   |   O   |   P   | BKSPC |
// | SHIFT  |   A   |   S   |   D   |   F   |   G   |                  |   H   |   J   |   K   |   L   |   ;   |   '   |
// | CTRL   |   Z   |   X   |   C   |   V   |   B   |  MUTE  |  |       |   N   |   M   |   ,   |   .   |   /   | SHIFT |
//          |  GUI  | ENTER |  ALT  | LOWER | ENTER |  | SPACE | RAISE | CTRL  |  ALT  |  GUI  |
// ------------------------------------------------------------------------------------------------------------

            bindings = <
&kp ESC &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp LSHFT   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SQT &kp RSHIFT
&kp LCTRL &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE &none      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp RET &kp LALT &mo GAME_LOWER  &kp SPACE    &kp RET  &none  &none &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_PREV C_NEXT>;
        };
        game_lower_layer {
            display-name = "game-lower";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  F1   |  F2   |  F3    |  F4    |  F5    |                   |   6   |   7   |   8   |   9   |   0   |       |
// |  TAB  |       |   ^   |        |        |        |                   |   Y   |   U   |   I   |   O   |   P   | BKSPC |
// | SHIFT |  <-   |   v   |  ->    |        |        |                   |   H   |   J   |   K   |   L   |   ;   |   '   |
// | CTRL  |       |   I   |   K    |   L    |   M    |  MUTE  |  |       |   N   |   M   |   ,   |   .   |   /   | SHIFT |
//         |       |  DEL  |        |       |         |  | ENTER |        |       |       |       |       |
// ------------------------------------------------------------------------------------------------------------

            bindings = <
&none &kp F1 &kp F2   &kp F3   &kp F4    &kp F5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&none   &none  &kp UP    &none    &none    &tog GAME                          &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&none   &kp LEFT  &kp DOWN    &kp RIGHT    &none     &none                &kp H  &kp J     &kp K     &kp L    &kp SQT &kp RSHIFT
&none &none  &kp I    &kp K    &kp L     &kp M  &kp C_MUTE &none          &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &trans &kp DEL &trans &none  &trans    &kp RET  &none  &none &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

    };
};